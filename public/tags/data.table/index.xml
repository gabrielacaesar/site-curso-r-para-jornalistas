<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data.table on Curso de R para jornalistas</title>
    <link>/tags/data.table/</link>
    <description>Recent content in data.table on Curso de R para jornalistas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/data.table/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Importação de arquivos</title>
      <link>/2019/08/20/importacao-de-arquivos/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/20/importacao-de-arquivos/</guid>
      <description>Identificar em qual pasta/diretório estamos A função getwd() informa em qual pasta/diretório o computador está. Essa função é do pacote ::base, que reúne funções básicas, e já vem instalada no R.
getwd()  Mudar a pasta em que vamos trabalhar A função setwd() muda a pasta/diretório para o que você informar.
setwd()  Listar os arquivos que estão nessa pasta A função list.files() mostra todos os arquivos que estão na atual pasta/diretório.</description>
    </item>
    
    <item>
      <title>Verificação de arquivo</title>
      <link>/2019/08/20/verificacao-de-arquivo/</link>
      <pubDate>Tue, 20 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/20/verificacao-de-arquivo/</guid>
      <description>Mostrar cabeçalho do arquivo A função colnames() mostra o cabeçalho do arquivo que já foi lido no tutorial anterior.
colnames()  Mostrar as cinco linhas iniciais do arquivo A função head() mostra as cinco primeiras linhas do arquivo lido.
head()  Mostrar as x linhas iniciais do arquivo - no caso, 15 Também podemos definir no head() o número de linhas que desejamos que apareça. No caso abaixo, 15 linhas.</description>
    </item>
    
    <item>
      <title>Análise - Twitter Bolsonaro</title>
      <link>/2019/08/24/analise-twitter-bolsonaro/</link>
      <pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/24/analise-twitter-bolsonaro/</guid>
      <description>Nesta primeira análise, nós vamos mexer com os dados do Twitter do Bolsonaro. Os dados foram extraídos do perfil do presidente na rede social.
instalar as bibliotecas Abaixo, nós instalamos (caso seja necessário) os pacotes que serão usados nesta análise com a função install.packages().
install.packages(&amp;quot;tidyverse&amp;quot;) install.packages(&amp;quot;data.table&amp;quot;)  ler as bibliotecas Em seguida, nós carregamos os pacotes com a função library(). Sempre quando começar uma nova análise, precisamos carregar os pacotes.</description>
    </item>
    
    <item>
      <title>Análise - Eleições 2016</title>
      <link>/2019/08/24/analise-eleicoes-2016/</link>
      <pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/2019/08/24/analise-eleicoes-2016/</guid>
      <description>Esta análise usará os dados eleições de 2016 para mostrar algumas possibilidades do R. O download do arquivo usado abaixo pode ser feito no repositório de dados do TSE. O caminho neste link é &amp;ldquo;Candidatos &amp;gt; 2016 &amp;gt; Candidatos (formato ZIP)&amp;rdquo;.
instalar as bibliotecas Caso você ainda não tenha instalado os pacotes abaixo, você precisa rodar novamente esse código com a função install.packages().
install.packages(&amp;quot;tidyverse&amp;quot;) install.packages(&amp;quot;data.table&amp;quot;)  carregar as bibliotecas Em seguida, precisamos carregar os pacotes que serão usados na análise com a função library().</description>
    </item>
    
  </channel>
</rss>